var_sources:
- name: vault
  type: vault
  config:
    url: https://vault.lab.home
    path_prefix: concourse
    auth_backend: approle
    ca_cert: |
      ((ca_cert))
    auth_params:
      role_id: ((role_id))
      secret_id: ((secret_id))

resources:
# Source Code
- name: spring-petclinic
  type: git
  source:
    uri: https://github.com/techgnosis/spring-petclinic.git
    branch: demo
- name: deploy-petclinic
  type: git
  source:
    uri: git@github.com:techgnosis/deploy-petclinic.git
    branch: master
    private_key: |
      ((concourse_github_privatekey))

# Tasks
- name: concourse
  type: git
  source:
    uri: https://github.com/techgnosis/concourse.git
    branch: master
# Images
- name: adoptopenjdk
  type: registry-image
  source:
    repository: adoptopenjdk
    tag: 14.0.2_8-jdk-hotspot
- name: spring-petclinic-image
  type: docker-image
  source:
    repository: harbor.lab.home/library/petclinic
    ca_certs:
    - domain: harbor.lab.home
      cert: |
        ((ca_cert))
- name: concourse-helper
  type: docker-image
  source:
    repository: harbor.lab.home/library/concourse-helper
    tag: latest
    ca_certs:
    - domain: harbor.lab.home
      cert: |
        ((ca_cert))

  


jobs:
- name: test-and-build-with-TBS
  public: true
  plan:
  - get: spring-petclinic
    trigger: true
  - get: adoptopenjdk
  - get: concourse-helper
  - get: concourse
  - task: maven-test
    file: concourse/tasks/maven-test/maven-test.yml
    image: adoptopenjdk
    input_mapping:
      app-source: spring-petclinic
  - task: maven-checkstyle
    image: adoptopenjdk
    file: concourse/tasks/maven-checkstyle/maven-checkstyle.yml
    input_mapping:
      app-source: spring-petclinic
  - task: tbs-build
    image: concourse-helper
    file: concourse/tasks/tbs-build/tbs-build.yml
    input_mapping:
      app-source: spring-petclinic
    params:
      tkgicluster: ((vault:tkgicluster))
      tkgiapi: ((vault:tkgiapi))
      tkgiuser: ((vault:tkgiuser))
      tkgipassword: ((vault:tkgipassword))
      namespace: ((vault:namespace))
      imagename: ((vault:imagename))


- name: deploy-new-image
  public: true
  plan:
    - get: spring-petclinic-image
      trigger: true
    - get: deploy-petclinic
    - get: concourse
    - get: concourse-helper
    - task: deploy image
      file: concourse/tasks/deploy-image/deploy-image.yml
      image: concourse-helper
      input_mapping:
        deploy-source: deploy-petclinic
        image: spring-petclinic-image
      params:
        tkgicluster: ((vault:tkgicluster))
        tkgiapi: ((vault:tkgiapi))
        tkgiuser: ((vault:tkgiuser))
        tkgipassword: ((vault:tkgipassword))
        namespace: ((vault:namespace))
        imagename: ((vault:imagename))
    - put: deploy-petclinic
      params: {repository: deploy-source-modified}

- name: deploy-infra-changes
  public: true
  plan:
    - get: deploy-petclinic
      trigger: true
    - get: concourse-helper
    - get: concourse
    - task: kapp deploy
      image: concourse-helper
      file: concourse/tasks/kapp-deploy/kapp-deploy.yml
      input_mapping:
        deploy-source: deploy-petclinic
      params:
        tkgicluster: ((vault:tkgicluster))
        tkgiapi: ((vault:tkgiapi))
        tkgiuser: ((vault:tkgiuser))
        tkgipassword: ((vault:tkgipassword))
        namespace: ((vault:namespace))
        imagename: ((vault:imagename))
    - task: create wavefront event
      image: concourse-helper
      file: concourse/tasks/wavefront-event/wavefront-event.yml

